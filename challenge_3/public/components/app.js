import CheckOutForm from './CheckOutForm.js';
import NameForm from './NameForm.js';
import AddressForm from './AddressForm.js';
import PaymentForm from './PaymentForm.js';
import ConfirmationForm from './ConfirmationForm.js';

class App extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      currentPage: ""
    };
    this.handleClick = this.handleClick.bind(this);
    this.handleSubmit = this.handleSubmit.bind(this);
  }

  handleSubmit(e) {
    console.log(e.target);
    e.preventDefault();
    console.log(e);
  }

  handleClick(e) {
    e.preventDefault();
    console.log('event', e.target.dataset.next);
    this.setState({
      currentPage: e.target.dataset.next
    });
  }

  render() {
    return React.createElement("div", null, React.createElement("h1", null, "Happy Shopping!"), this.state.currentPage === "" && React.createElement("button", {
      "data-next": "CheckOutForm",
      onClick: this.handleClick
    }, "Make Payment"), this.state.currentPage === "CheckOutForm" && React.createElement(CheckOutForm, {
      handleClick: this.handleClick
    }), this.state.currentPage === "NameForm" && React.createElement(NameForm, {
      handleClick: this.handleClick
    }), this.state.currentPage === "AddressForm" && React.createElement(AddressForm, {
      handleClick: this.handleClick
    }), this.state.currentPage === "PaymentForm" && React.createElement(PaymentForm, {
      handleClick: this.handleClick
    }), this.state.currentPage === "ConfirmationForm" && React.createElement(ConfirmationForm, {
      handleClick: this.handleClick
    }));
  }

}

export default App;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL2NsaWVudC9jb21wb25lbnRzL0FwcC5qc3giXSwibmFtZXMiOlsiQ2hlY2tPdXRGb3JtIiwiTmFtZUZvcm0iLCJBZGRyZXNzRm9ybSIsIlBheW1lbnRGb3JtIiwiQ29uZmlybWF0aW9uRm9ybSIsIkFwcCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInN0YXRlIiwiY3VycmVudFBhZ2UiLCJoYW5kbGVDbGljayIsImJpbmQiLCJoYW5kbGVTdWJtaXQiLCJlIiwiY29uc29sZSIsImxvZyIsInRhcmdldCIsInByZXZlbnREZWZhdWx0IiwiZGF0YXNldCIsIm5leHQiLCJzZXRTdGF0ZSIsInJlbmRlciJdLCJtYXBwaW5ncyI6IkFBQUEsT0FBT0EsWUFBUCxNQUF5QixtQkFBekI7QUFDQSxPQUFPQyxRQUFQLE1BQXFCLGVBQXJCO0FBQ0EsT0FBT0MsV0FBUCxNQUF3QixrQkFBeEI7QUFDQSxPQUFPQyxXQUFQLE1BQXdCLGtCQUF4QjtBQUNBLE9BQU9DLGdCQUFQLE1BQThCLHVCQUE5Qjs7QUFHQSxNQUFNQyxHQUFOLFNBQWtCQyxLQUFLLENBQUNDLFNBQXhCLENBQWtDO0FBQ2hDQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBUTtBQUNqQixVQUFNQSxLQUFOO0FBQ0EsU0FBS0MsS0FBTCxHQUFhO0FBQ1hDLE1BQUFBLFdBQVcsRUFBRTtBQURGLEtBQWI7QUFJQSxTQUFLQyxXQUFMLEdBQW1CLEtBQUtBLFdBQUwsQ0FBaUJDLElBQWpCLENBQXNCLElBQXRCLENBQW5CO0FBQ0EsU0FBS0MsWUFBTCxHQUFvQixLQUFLQSxZQUFMLENBQWtCRCxJQUFsQixDQUF1QixJQUF2QixDQUFwQjtBQUNEOztBQUVEQyxFQUFBQSxZQUFZLENBQUNDLENBQUQsRUFBSTtBQUNkQyxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsQ0FBQyxDQUFDRyxNQUFkO0FBQ0FILElBQUFBLENBQUMsQ0FBQ0ksY0FBRjtBQUNBSCxJQUFBQSxPQUFPLENBQUNDLEdBQVIsQ0FBWUYsQ0FBWjtBQUNEOztBQUVESCxFQUFBQSxXQUFXLENBQUNHLENBQUQsRUFBSTtBQUNiQSxJQUFBQSxDQUFDLENBQUNJLGNBQUY7QUFDQUgsSUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksT0FBWixFQUFxQkYsQ0FBQyxDQUFDRyxNQUFGLENBQVNFLE9BQVQsQ0FBaUJDLElBQXRDO0FBQ0EsU0FBS0MsUUFBTCxDQUFjO0FBQUNYLE1BQUFBLFdBQVcsRUFBRUksQ0FBQyxDQUFDRyxNQUFGLENBQVNFLE9BQVQsQ0FBaUJDO0FBQS9CLEtBQWQ7QUFDRDs7QUFFREUsRUFBQUEsTUFBTSxHQUFJO0FBQ1IsV0FDRSxpQ0FDRSxrREFERixFQUVHLEtBQUtiLEtBQUwsQ0FBV0MsV0FBWCxLQUEyQixFQUEzQixJQUFpQztBQUFRLG1CQUFVLGNBQWxCO0FBQWlDLE1BQUEsT0FBTyxFQUFHLEtBQUtDO0FBQWhELHNCQUZwQyxFQUdHLEtBQUtGLEtBQUwsQ0FBV0MsV0FBWCxLQUEyQixjQUEzQixJQUE2QyxvQkFBQyxZQUFEO0FBQWMsTUFBQSxXQUFXLEVBQUksS0FBS0M7QUFBbEMsTUFIaEQsRUFJRyxLQUFLRixLQUFMLENBQVdDLFdBQVgsS0FBMkIsVUFBM0IsSUFBeUMsb0JBQUMsUUFBRDtBQUFVLE1BQUEsV0FBVyxFQUFJLEtBQUtDO0FBQTlCLE1BSjVDLEVBS0csS0FBS0YsS0FBTCxDQUFXQyxXQUFYLEtBQTJCLGFBQTNCLElBQTRDLG9CQUFDLFdBQUQ7QUFBYSxNQUFBLFdBQVcsRUFBSSxLQUFLQztBQUFqQyxNQUwvQyxFQU1HLEtBQUtGLEtBQUwsQ0FBV0MsV0FBWCxLQUEyQixhQUEzQixJQUE0QyxvQkFBQyxXQUFEO0FBQWEsTUFBQSxXQUFXLEVBQUcsS0FBS0M7QUFBaEMsTUFOL0MsRUFPRyxLQUFLRixLQUFMLENBQVdDLFdBQVgsS0FBMkIsa0JBQTNCLElBQWlELG9CQUFDLGdCQUFEO0FBQWtCLE1BQUEsV0FBVyxFQUFJLEtBQUtDO0FBQXRDLE1BUHBELENBREY7QUFXRDs7QUFuQytCOztBQXNDbEMsZUFBZVAsR0FBZiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBDaGVja091dEZvcm0gZnJvbSAnLi9DaGVja091dEZvcm0uanMnO1xuaW1wb3J0IE5hbWVGb3JtIGZyb20gJy4vTmFtZUZvcm0uanMnXG5pbXBvcnQgQWRkcmVzc0Zvcm0gZnJvbSAnLi9BZGRyZXNzRm9ybS5qcydcbmltcG9ydCBQYXltZW50Rm9ybSBmcm9tICcuL1BheW1lbnRGb3JtLmpzJ1xuaW1wb3J0IENvbmZpcm1hdGlvbkZvcm0gIGZyb20gJy4vQ29uZmlybWF0aW9uRm9ybS5qcyc7XG5cblxuY2xhc3MgQXBwIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50IHtcbiAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICBzdXBlcihwcm9wcyk7XG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGN1cnJlbnRQYWdlOiBcIlwiXG4gICAgfTtcblxuICAgIHRoaXMuaGFuZGxlQ2xpY2sgPSB0aGlzLmhhbmRsZUNsaWNrLmJpbmQodGhpcyk7XG4gICAgdGhpcy5oYW5kbGVTdWJtaXQgPSB0aGlzLmhhbmRsZVN1Ym1pdC5iaW5kKHRoaXMpO1xuICB9XG5cbiAgaGFuZGxlU3VibWl0KGUpIHtcbiAgICBjb25zb2xlLmxvZyhlLnRhcmdldClcbiAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICBjb25zb2xlLmxvZyhlKVxuICB9XG5cbiAgaGFuZGxlQ2xpY2soZSkge1xuICAgIGUucHJldmVudERlZmF1bHQoKVxuICAgIGNvbnNvbGUubG9nKCdldmVudCcsIGUudGFyZ2V0LmRhdGFzZXQubmV4dCk7XG4gICAgdGhpcy5zZXRTdGF0ZSh7Y3VycmVudFBhZ2U6IGUudGFyZ2V0LmRhdGFzZXQubmV4dH0pXG4gIH1cblxuICByZW5kZXIgKCkge1xuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8aDE+SGFwcHkgU2hvcHBpbmchPC9oMT5cbiAgICAgICAge3RoaXMuc3RhdGUuY3VycmVudFBhZ2UgPT09IFwiXCIgJiYgPGJ1dHRvbiBkYXRhLW5leHQ9XCJDaGVja091dEZvcm1cIiBvbkNsaWNrID17dGhpcy5oYW5kbGVDbGlja30+TWFrZSBQYXltZW50PC9idXR0b24+IH1cbiAgICAgICAge3RoaXMuc3RhdGUuY3VycmVudFBhZ2UgPT09IFwiQ2hlY2tPdXRGb3JtXCIgJiYgPENoZWNrT3V0Rm9ybSBoYW5kbGVDbGljayA9IHt0aGlzLmhhbmRsZUNsaWNrfS8+IH1cbiAgICAgICAge3RoaXMuc3RhdGUuY3VycmVudFBhZ2UgPT09IFwiTmFtZUZvcm1cIiAmJiA8TmFtZUZvcm0gaGFuZGxlQ2xpY2sgPSB7dGhpcy5oYW5kbGVDbGlja30vPiB9XG4gICAgICAgIHt0aGlzLnN0YXRlLmN1cnJlbnRQYWdlID09PSBcIkFkZHJlc3NGb3JtXCIgJiYgPEFkZHJlc3NGb3JtIGhhbmRsZUNsaWNrID0ge3RoaXMuaGFuZGxlQ2xpY2t9Lz4gfVxuICAgICAgICB7dGhpcy5zdGF0ZS5jdXJyZW50UGFnZSA9PT0gXCJQYXltZW50Rm9ybVwiICYmIDxQYXltZW50Rm9ybSBoYW5kbGVDbGljaz0ge3RoaXMuaGFuZGxlQ2xpY2t9Lz4gfVxuICAgICAgICB7dGhpcy5zdGF0ZS5jdXJyZW50UGFnZSA9PT0gXCJDb25maXJtYXRpb25Gb3JtXCIgJiYgPENvbmZpcm1hdGlvbkZvcm0gaGFuZGxlQ2xpY2sgPSB7dGhpcy5oYW5kbGVDbGlja30vPiB9XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQXBwO1xuIl19